store token in behaviorsubject
interceptor---------------------------------------------------------
import { DataService } from './data.service';
import { Injectable } from '@angular/core';
import {
  HttpRequest,
  HttpHandler,
  HttpEvent,
  HttpInterceptor
} from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable()
export class DataInterceptor implements HttpInterceptor {
  token!: string;
  constructor(private ds: DataService) {}

  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {
    console.log('intercept >>>>>',request)
    this.getToken();
    request = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + this.token).set('content-type', 'application/json') })
    return next.handle(request)
  }
  getToken(){
    this.ds.token.subscribe((token: any) => {
      this.token = token;
    })
  }
}
-----------------------------------------------------------------------------------
service
export class DataService {
  url = environment.base_url;
  tokenSubject = new BehaviorSubject('');
  token = this.tokenSubject.asObservable();
  constructor(private http: HttpClient) {}
  login(data: User) {
    return this.http.post(`${this.url}/login`, data);
  }
  setToken(token: string) {
    this.tokenSubject.next(token);
  }
  getData(token: string) {
    return this.http.get(`${this.url}/660/posts`);
  }
  ----------------------------------------------------------------------------------
